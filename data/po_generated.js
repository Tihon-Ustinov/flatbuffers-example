// automatically generated by the FlatBuffers compiler, do not modify

/**
 * @const
 * @namespace
 */
var ProductOffering = ProductOffering || {};

/**
 * @enum {number}
 */
ProductOffering.LifecycleStatus = {
  Active: 0,
  Project: 1
};

/**
 * @enum {string}
 */
ProductOffering.LifecycleStatusName = {
  '0': 'Active',
  '1': 'Project'
};

/**
 * @constructor
 */
ProductOffering.Offer = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {ProductOffering.Offer}
 */
ProductOffering.Offer.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {ProductOffering.Offer=} obj
 * @returns {ProductOffering.Offer}
 */
ProductOffering.Offer.getRootAsOffer = function(bb, obj) {
  return (obj || new ProductOffering.Offer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {ProductOffering.Offer=} obj
 * @returns {ProductOffering.Offer}
 */
ProductOffering.Offer.getSizePrefixedRootAsOffer = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new ProductOffering.Offer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
ProductOffering.Offer.prototype.name = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
ProductOffering.Offer.prototype.version = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @returns {ProductOffering.LifecycleStatus}
 */
ProductOffering.Offer.prototype.status = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? /** @type {ProductOffering.LifecycleStatus} */ (this.bb.readInt8(this.bb_pos + offset)) : ProductOffering.LifecycleStatus.Active;
};

/**
 * @param {flatbuffers.Builder} builder
 */
ProductOffering.Offer.startOffer = function(builder) {
  builder.startObject(3);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} nameOffset
 */
ProductOffering.Offer.addName = function(builder, nameOffset) {
  builder.addFieldOffset(0, nameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} versionOffset
 */
ProductOffering.Offer.addVersion = function(builder, versionOffset) {
  builder.addFieldOffset(1, versionOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {ProductOffering.LifecycleStatus} status
 */
ProductOffering.Offer.addStatus = function(builder, status) {
  builder.addFieldInt8(2, status, ProductOffering.LifecycleStatus.Active);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
ProductOffering.Offer.endOffer = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} offset
 */
ProductOffering.Offer.finishOfferBuffer = function(builder, offset) {
  builder.finish(offset);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} offset
 */
ProductOffering.Offer.finishSizePrefixedOfferBuffer = function(builder, offset) {
  builder.finish(offset, undefined, true);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} nameOffset
 * @param {flatbuffers.Offset} versionOffset
 * @param {ProductOffering.LifecycleStatus} status
 * @returns {flatbuffers.Offset}
 */
ProductOffering.Offer.createOffer = function(builder, nameOffset, versionOffset, status) {
  ProductOffering.Offer.startOffer(builder);
  ProductOffering.Offer.addName(builder, nameOffset);
  ProductOffering.Offer.addVersion(builder, versionOffset);
  ProductOffering.Offer.addStatus(builder, status);
  return ProductOffering.Offer.endOffer(builder);
}

// Exports for Node.js and RequireJS
this.ProductOffering = ProductOffering;
